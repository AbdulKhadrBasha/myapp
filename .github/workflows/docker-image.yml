
name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build-n-deploy:
    runs-on: windows-2019
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Build and push console
      working-directory: .
      shell: bash
      run: |
        export tag_version="$(cat VERSION)";
        

        az login --service-principal --username ${{env.clientid}} --password ${{env.clientsecret}} --tenant ${{env.tenantid}}
        az aks get-credentials --resource-group rg-sample-rnd --name aks-myapp --overwrite-existing --admin
        ls -lsa
        cat ./kubernetes/myapp.yml | envsubst > ./kubernetes/myapp.yml
        cat ./kubernetes/myapp.yml

        export connection_string=$(kubectl get secret dbconsecret -n dotnet -o jsonpath="{.data.dbconnection}" | base64 --decode)
        echo $connection_string
        cat ./appsettings.json | envsubst > ./appsettings.json
        cat ./appsettings.json
        ls -1 -d ./appsettings.json

        docker build --no-cache -t myapp:$tag_version --file Dockerfile .
        docker tag myapp:$tag_version samplerndacr.azurecr.io/myapp:$tag_version
        docker login samplerndacr.azurecr.io -u ${{env.username}} -p ${{env.password}}
        docker image push samplerndacr.azurecr.io/myapp:$tag_version

        kubectl apply -f ./kubernetes/myapp.yml -n dotnet
        kubectl apply -f ./kubernetes/mydb.yml -n dotnet

        docker logout
      env:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        clientid: ${{ secrets.REGISTRY_clientid }}
        clientsecret: ${{ secrets.REGISTRY_clientsecret }}
        tenantid: ${{ secrets.REGISTRY_tenantid }}
