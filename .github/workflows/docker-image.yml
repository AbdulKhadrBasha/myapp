
name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build-n-push:
    runs-on: windows-2019
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Build and push console
      working-directory: .
      shell: bash
      run: |
        export tag_version="$(cat VERSION)";
        docker build -t myapp:$tag_version --file Dockerfile .
        docker tag myapp:$tag_version samplerndacr.azurecr.io/myapp:$tag_version
        docker login samplerndacr.azurecr.io -u ${{env.username}} -p ${{env.password}}
        docker image push samplerndacr.azurecr.io/myapp:$tag_version

        az login --service-principal --username ${{env.clientid}} --password ${{env.clientsecret}} --tenant ${{env.clientsecret}}
        az aks get-credentials --resource-group rg-sample-rnd --name aks-myapp --overwrite-existing --admin

        cat kubernetes/myapp.yaml | envsubst > ./myapp.yaml
        cat kubernetes/myapp.yaml

        kubectl apply -f kubernetes/myapp.yaml -n dotnet

        docker logout
      env:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        clientid: ${{ secrets.REGISTRY_clientid }}
        clientsecret: ${{ secrets.REGISTRY_clientsecret }}
        tenantid: ${{ secrets.REGISTRY_tenantid }}
